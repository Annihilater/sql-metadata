# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # https://github.com/actions/python-versions/blob/main/versions-manifest.json
        python-version:
        - "3.6"
        - "3.7"
        - "3.8"
        - "3.9"
        - "3.10.0-alpha.5"

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Load ~/.cache directory and Poetry .venv
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache
          .venv
        key: cache-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}-v1

    - name: Install Python wheel support to speed up things
      run: pip install wheel

    # this prevents issues with Python 3.10 when poetry tries to install black's dependency "dataclasses"
    - name: Pre-install black
      run: pip install black

    - name: Install and set up Poetry
      run: |
        pip install poetry==1.1.5
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true

    - name: Poetry details
      run: |
        poetry --version
        poetry config --list

    - name: Install dependencies with poetry
      run: |
        poetry install --no-root
        poetry run python --version
        poetry show

    - name: Test with pytest
      run: poetry run pytest -vv --cov=sql_metadata --cov-report=term

    - name: Lint with pylint
      run: poetry run pylint sql_metadata.py

    - name: Build a distribution package
      run: poetry build -vvv
