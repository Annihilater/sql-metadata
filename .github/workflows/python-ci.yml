# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # https://github.com/actions/python-versions/blob/main/versions-manifest.json
        python-version:
        - "3.6"
        - "3.7"
        - "3.8"
        - "3.9"
        - "3.10.0-alpha.5"

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
      # https://python-poetry.org/docs/#installation
    - name: Install Poetry
      env:
        # https://python-poetry.org/docs/configuration/#using-environment-variables
        POETRY_VERSION: 1.1.4
        POETRY_NO_INTERACTION: 1
        POETRY_VIRTUALENVS_CREATE: 1
        POETRY_VIRTUALENVS_IN_PROJECT: 1
      run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
        source $HOME/.poetry/env

        poetry config --list

    - name: Poetry details
      run: |
        poetry --version
        poetry config --list

    - name: Load cached Poetry venv
      uses: actions/cache@v2
      with:
        path: .venv
        key: v2-venv-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: v2-venv-${{ matrix.python-version }}-

    - name: Install dependencies with poetry
      run: |
        poetry install
        poetry run python --version
        poetry show

    - name: Test with pytest
      run: poetry run pytest -vv --cov=sql_metadata --cov-report=term

    - name: Lint with pylint
      run: poetry run pylint sql_metadata.py

    - name: Build a distribution package
      run: poetry build -vvv
